#
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  ## targetCPUUtilizationPercentage only used if the cluster doesn't support autoscaling/v2beta
  targetCPUUtilizationPercentage:
  ## Otherwise for clusters that do support autoscaling/v2beta, use metrics
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80

global:
  clusterDomain: cluster.local
  updateStrategy: "RollingUpdate"
  editor: "FinanceWise"
  namespace: "financewise"
  domainName: "dev.example.com"
  pullPolicy: Always
  imagePullSecrets:
  - name: regsecret

  monitoring:
    datadog:
      enabled: false
      env: env_name
      tennant: client_name
      debug: false

###################
OnBoardApp:
  enabled: true
  name: fw-onboard-app
  updateStrategy: "RollingUpdate"
  image:
    repository: fwinternal.azurecr.io
    name: onboard-app
    tag: master
    pullPolicy: Always

  replicaCount: 1

  apiPort: 9000

  env:
    - name: API_URL
      value: http://fw-services.financewise.svc.cluster.local:3000

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/affinity: "cookie"
    hosts:
      - host: onboard.dev.example.com
        paths:
          - /
    tls:
     - secretName: onboard.dev.example.com
       hosts:
         - onboard.dev.example.com


  resources:
    requests:
      cpu: 200m
      memory: 500Mi
    limits:
      cpu: 3000m
      memory: 1000Mi

  readinessProbe:
    tcpSocket:
      port: 80
    initialDelaySeconds: 60
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 5

  livenessProbe:
    tcpSocket:
      port: 80
    initialDelaySeconds: 60
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3

  nodeSelector: {}

  tolerations: []

  affinity: {}